name: Build Firmware
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

# We need write permission so the workflow can commit generated files back to the repo
permissions:
  contents: write

jobs:
  prepare:
    name: Prepare (generate files, commit if changed, build matrix)
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.make-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run board generator and commit changes (action)
        uses: ./.github/actions/generate-boards
        with:
          commit: 'true'
        # action will run the generator and push changes if there are any.

      - name: Make matrix from Buildscripts/boards.json
        id: make-matrix
        run: |
          if [ ! -f Buildscripts/boards.json ]; then
            echo "matrix=[]" >> $GITHUB_OUTPUT
            exit 0
          fi
          # ensure jq is available
          sudo apt-get update -y
          sudo apt-get install -y jq
          # Build matrix: each element contains id and arch (fallback arch if not specified)
          MATRIX=$(jq -c '[.[] | {id: .id, arch: (.arch // "esp32s3")}]' Buildscripts/boards.json)
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT

  build:
    name: Build (per-board)
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout (fresh)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build"
        uses: ./.github/actions/build-firmware
        with:
          board_id: ${{ matrix.board.id }}
          arch: ${{ matrix.board.arch }}