name: Build Firmware
on:
  push:
    branches:
      - main
      - SSOT-board-config
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: write

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      matrix: ${{ steps.make-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Run board generator
        uses: ./.github/actions/generate-boards

      - name: Check generated files are committed
        shell: bash
        run: |
          set -euo pipefail
          # Fail if any generated files are unstaged/changed/untracked
          if ! git diff --exit-code --quiet || git ls-files --others --exclude-standard | grep -q .; then
            echo "ERROR: Generated files are out-of-date. Run:"
            echo "  python3 Buildscripts/generate_boards.py"
            echo "then git add/commit the generated files and re-run the CI."
            echo
            echo "Changed files:"
            git --no-pager status --porcelain
            exit 1
          fi

      - name: Make matrix from Buildscripts/boards.json
        id: make-matrix
        run: |
          if [ ! -f Buildscripts/boards.json ]; then
            echo "ERROR: Buildscripts/boards.json not found!" >&2
            exit 1
          fi
          # ensure jq is available
          sudo apt-get update -y
          sudo apt-get install -y jq
          # Build matrix: each element contains id and arch (fallback arch if not specified)
          MATRIX=$(jq -c '[.[] | {id: .id, arch: (.arch // "esp32s3")}]' "Buildscripts/boards.json")
          echo "matrix=${MATRIX}" >> "$GITHUB_OUTPUT"

  build:
    name: Build Firmware
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Build
        uses: ./.github/actions/build-firmware
        with:
          board_id: ${{ matrix.board.id }}
          arch: ${{ matrix.board.arch }}
